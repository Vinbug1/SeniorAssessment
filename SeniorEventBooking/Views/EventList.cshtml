@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    Layout = "~/Views/Shared/master.cshtml";

    // Get all child events with a valid date, ordered by date
    var events = Model.Children
                      .Where(x => x.Value<DateTime?>("eventDateTime") != null)
                      .OrderBy(x => x.Value<DateTime>("eventDateTime"));
}

<section class="events-list container">
    <h1 class="page-title">@Model.Name</h1>

    <input type="text" id="searchBox" placeholder="Search events..." />

    <div class="events-grid">
        @foreach (var evt in events)
        {
            var eventDate = evt.Value<DateTime?>("eventDateTime");
            <div class="event-card">
                <h3>@evt.Value("title")</h3>
                <p class="summary">@evt.Value("summary")</p>
                <p><strong>Date:</strong> @eventDate?.ToString("dd MMM yyyy")</p>
                <p><strong>Location:</strong> @evt.Value("location")</p>
                <a href="@evt.Url()" class="book-btn">View & Book</a>
            </div>
        }
    </div>
</section>

<style>
    /* Container styling */
    .events-list.container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 40px 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f9f9f9;
    }

    /* Page title */
    .page-title {
        font-size: 2.5rem;
        text-align: center;
        margin-bottom: 30px;
        color: #333;
    }

    /* Search box */
    #searchBox {
        display: block;
        width: 100%;
        max-width: 400px;
        margin: 0 auto 40px auto;
        padding: 10px 15px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
    }

    /* Events grid */
    .events-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 20px;
    }

    /* Individual event card */
    .event-card {
        background-color: #fff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        transition: transform 0.2s, box-shadow 0.2s;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .event-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.15);
    }

    .event-card h3 {
        font-size: 1.5rem;
        margin-bottom: 10px;
        color: #0078d7;
    }

    .event-card p {
        margin: 5px 0;
        color: #555;
    }

    .event-card .summary {
        font-style: italic;
        color: #666;
    }

    /* Button styling */
    .book-btn {
        display: inline-block;
        text-align: center;
        margin-top: 15px;
        padding: 10px 15px;
        background-color: #0078d7;
        color: #fff;
        font-weight: bold;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.2s;
    }

    .book-btn:hover {
        background-color: #005fa3;
    }
</style>

<script>
    // Simple search/filter functionality
    const searchBox = document.getElementById('searchBox');
    const eventCards = document.querySelectorAll('.event-card');

    searchBox.addEventListener('input', function () {
        const query = this.value.toLowerCase();
        eventCards.forEach(card => {
            const title = card.querySelector('h3').textContent.toLowerCase();
            const summary = card.querySelector('.summary').textContent.toLowerCase();
            card.style.display = (title.includes(query) || summary.includes(query)) ? '' : 'none';
        });
    });
</script>
